/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package conection;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.io.File;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.text.SimpleDateFormat;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.DriverManager;
import java.sql.Statement;
import javax.swing.JTable;
import java.io.File;
import java.sql.Date;
import java.util.HashMap;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Gilang
 */
public class halamanAdmin extends javax.swing.JFrame {

    public static String usernameLoggedIn;
    public static String userRole;
    DefaultTableModel model;
    

    /**
     * Creates new form halamanAdmin
     */
    public halamanAdmin(String Nama, String role) {
        initComponents();
        // Menggunakan nilai usernameLoggedIn
        usernameLoggedIn = Nama;
        userRole = role;
        namaUser.setText(usernameLoggedIn);
        
        System.out.println("Pengguna yang login: " + usernameLoggedIn);
        System.out.println("Pengguna yang login: " + role);
    }

    halamanAdmin() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabBuku = new javax.swing.JTable();
        txtCari = new javax.swing.JFormattedTextField();
        btnSearch = new javax.swing.JButton();
        btnTambah = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();
        label5 = new java.awt.Label();
        label6 = new java.awt.Label();
        jumlah = new javax.swing.JFormattedTextField();
        tahunTerbit = new javax.swing.JFormattedTextField();
        penerbit = new javax.swing.JFormattedTextField();
        pengarang = new javax.swing.JFormattedTextField();
        namaBuku = new javax.swing.JFormattedTextField();
        kodeBuku = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        namaUser = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        LogOut = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(1117, 718));

        tabBuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabBuku.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tabBukuAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tabBuku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabBukuMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabBuku);

        txtCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariActionPerformed(evt);
            }
        });
        txtCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCariKeyPressed(evt);
            }
        });

        btnSearch.setBackground(java.awt.SystemColor.activeCaptionText);
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conection/Gambar/BtnSearch1.png"))); // NOI18N
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        btnSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSearchKeyPressed(evt);
            }
        });

        btnTambah.setBackground(java.awt.SystemColor.activeCaption);
        btnTambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conection/Gambar/add.png"))); // NOI18N
        btnTambah.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTambahMouseClicked(evt);
            }
        });
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnDelete.setBackground(java.awt.SystemColor.activeCaption);
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conection/Gambar/delete.png"))); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnEdit.setBackground(java.awt.SystemColor.activeCaption);
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conection/Gambar/edit.png"))); // NOI18N
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        label1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label1.setText("Kode Buku");

        label2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label2.setText("Nama Buku");

        label3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label3.setText("Pengarang");

        label4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label4.setText("Penerbit");

        label5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label5.setText("Tahun Terbit");

        label6.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label6.setText("Jumlah");

        jumlah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumlahActionPerformed(evt);
            }
        });

        tahunTerbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tahunTerbitActionPerformed(evt);
            }
        });

        penerbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                penerbitActionPerformed(evt);
            }
        });

        pengarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pengarangActionPerformed(evt);
            }
        });

        kodeBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeBukuActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Century", 1, 36)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conection/Gambar/Icon.png"))); // NOI18N
        jLabel1.setText("MyLibrary");

        jPanel2.setBackground(new java.awt.Color(51, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.white));

        namaUser.setFont(new java.awt.Font("Century", 0, 24)); // NOI18N
        namaUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conection/Gambar/iconLogin.png"))); // NOI18N

        LogOut.setText("LogOut");
        LogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 236, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(7, 7, 7)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(41, 41, 41)
                            .addComponent(namaUser, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(68, 68, 68)
                            .addComponent(LogOut)))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(59, 59, 59)
                    .addComponent(jLabel2)
                    .addGap(27, 27, 27)
                    .addComponent(namaUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(365, 365, 365)
                    .addComponent(LogOut)
                    .addGap(59, 59, 59)))
        );

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conection/Gambar/print (1).png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 846, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(67, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(61, 61, 61)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(namaBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(pengarang, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(kodeBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(46, 46, 46)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(tahunTerbit, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(penerbit, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(btnTambah)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnEdit)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnDelete)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton2)))
                                .addGap(102, 102, 102))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kodeBuku, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(penerbit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tahunTerbit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(namaBuku, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(label6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pengarang)
                    .addComponent(jumlah, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnTambah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnEdit)
                                    .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                            .addComponent(jButton2)
                            .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1163, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 808, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tabBukuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabBukuMouseClicked
        // TODO add your handling code here:
        int i = tabBuku.getSelectedRow();
        if (i >= 0) {
            DefaultTableModel model = (DefaultTableModel) tabBuku.getModel();
            kodeBuku.setText(model.getValueAt(i, 0).toString());
            namaBuku.setText(model.getValueAt(i, 1).toString());
            pengarang.setText(model.getValueAt(i, 2).toString());
            penerbit.setText(model.getValueAt(i, 3).toString());
            tahunTerbit.setText(model.getValueAt(i, 4).toString());
            jumlah.setText(model.getValueAt(i, 5).toString());
        }

    }//GEN-LAST:event_tabBukuMouseClicked

    private void txtCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCariActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String filterText = txtCari.getText().trim();
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Kode Buku");
        model.addColumn("Nama Buku");
        model.addColumn("Nama Pengarang");
        model.addColumn("Penerbit");
        model.addColumn("Tahun Terbit");
        model.addColumn("Jumlah");

        try {
            String sql;
            if (!filterText.isEmpty()) {
                sql = "SELECT Kode_Buku, Nama_Buku, Pengarang, Penerbit, Tahun_Terbit, Jumlah FROM tblBuku WHERE Nama_Buku LIKE ?";
            } else {
                sql = "SELECT Kode_Buku, Nama_Buku, Pengarang, Penerbit, Tahun_Terbit, Jumlah FROM tblBuku";
            }

            java.sql.Connection conn = (Connection) Conection.configDB();
            java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
            if (!filterText.isEmpty()) {
                pstm.setString(1, "%" + filterText + "%");
            }
            java.sql.ResultSet res = pstm.executeQuery();

            while (res.next()) {
                model.addRow(new Object[]{
                    res.getString(1),
                    res.getString(2),
                    res.getString(3),
                    res.getString(4),
                    res.getString(5),
                    res.getString(6) // tambahkan data jumlah ke dalam model tabel
                });
            }
            tabBuku.setModel(model);
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tabBukuAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tabBukuAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tabBukuAncestorAdded

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // TODO add your handling code here:
        try {
            String query = "INSERT INTO tblBuku (Kode_Buku, Nama_Buku, Pengarang, Penerbit, Tahun_Terbit, Jumlah) VALUES (?, ?, ?, ?, ?, ?)";

            java.sql.Connection conn = (Connection) Conection.configDB();
            java.sql.PreparedStatement transaksiPstm;
            try (java.sql.PreparedStatement pstm = conn.prepareStatement(query)) {
                pstm.setString(1, kodeBuku.getText());
                pstm.setString(2, namaBuku.getText());
                pstm.setString(3, pengarang.getText());
                pstm.setString(4, penerbit.getText());
                pstm.setInt(5, Integer.parseInt(tahunTerbit.getText()));
                pstm.setString(6, jumlah.getText());
                pstm.executeUpdate();
                // Mendapatkan informasi pengguna
                String namaUser = usernameLoggedIn;
                String role = userRole;
                java.util.Date tanggalUpdate = new java.util.Date();
                // Memasukkan data kedalam table transaksi
                String transaksiQuery = "INSERT INTO detailTransaksi (Kode_Buku, Nama_Buku, Jumlah, namaUser, role, tanggalUpdate, Keterangan) VALUES (?, ?, ?, ?, ?, ?, ?)";
                transaksiPstm = conn.prepareStatement(transaksiQuery);
                transaksiPstm.setString(1, kodeBuku.getText());
                transaksiPstm.setString(2, namaBuku.getText());
                transaksiPstm.setInt(3, Integer.parseInt(jumlah.getText()));
                transaksiPstm.setString(4, namaUser);
                transaksiPstm.setString(5, role);
                transaksiPstm.setTimestamp(6, new java.sql.Timestamp(tanggalUpdate.getTime()));
                transaksiPstm.setString(7, "Tambah");
                transaksiPstm.executeUpdate();
                JOptionPane.showMessageDialog(null, "Data Buku berhasil ditambah");
                // Mengosongkan field
                namaBuku.setText("");
                kodeBuku.setText("");
                pengarang.setText("");
                penerbit.setText("");
                tahunTerbit.setText("");
                jumlah.setText("");
                // Mengupdate tabel
                DefaultTableModel tabModel = new DefaultTableModel(new Object[]{"Kode_buku","Nama_Buku", "Pengarang", "Penerbit", "Tahun_Terbit", "Jumlah"}, 0);
                java.sql.Statement stmt = conn.createStatement();
                java.sql.ResultSet rs = stmt.executeQuery("SELECT * FROM tblBuku");
                while (rs.next()) {
                    tabModel.addRow(new Object[]{rs.getString("Kode_Buku"),rs.getString("Nama_Buku"), rs.getString("Pengarang"), rs.getString("Penerbit"), rs.getString("Tahun_Terbit"), rs.getInt("Jumlah")});
                }   tabBuku.setModel(tabModel);
                // Menutup ResultSet, Statement, dan PreparedStatement
            }
            transaksiPstm.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnTambahMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTambahMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTambahMouseClicked

    private void pengarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pengarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pengarangActionPerformed

    private void jumlahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumlahActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jumlahActionPerformed

    private void tahunTerbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tahunTerbitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tahunTerbitActionPerformed

    private void penerbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_penerbitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_penerbitActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        try {
            String query = "UPDATE tblBuku SET Nama_Buku = ?, Pengarang = ?, Penerbit = ?, Tahun_Terbit = ?, Jumlah = ? WHERE Kode_buku = ?";

            java.sql.Connection conn = (Connection) Conection.configDB();
            java.sql.PreparedStatement transaksiPstm;
            try (java.sql.PreparedStatement pstm = conn.prepareStatement(query)) {
                pstm.setString(1, namaBuku.getText());
                pstm.setString(2, pengarang.getText());
                pstm.setString(3, penerbit.getText());
                pstm.setString(4, tahunTerbit.getText());
                pstm.setInt(5, Integer.parseInt(jumlah.getText()));
                pstm.setString(6, kodeBuku.getText());
                pstm.executeUpdate();

                // Mendapatkan informasi pengguna
                String namaUser = usernameLoggedIn;
                String role = userRole;
                java.util.Date tanggalUpdate = new java.util.Date();

                // Memasukan data kedalam table transaksi
                String transaksiQuery = "INSERT INTO detailTransaksi (Kode_Buku, Nama_Buku, Jumlah, namaUser, role, tanggalUpdate, Keterangan) VALUES (?, ?, ?, ?, ?, ?, ?)";
                transaksiPstm = conn.prepareStatement(transaksiQuery);
                transaksiPstm.setString(1, kodeBuku.getText());
                transaksiPstm.setString(2, namaBuku.getText());
                transaksiPstm.setInt(3, Integer.parseInt(jumlah.getText()));
                transaksiPstm.setString(4, namaUser);
                transaksiPstm.setString(5, role);
                transaksiPstm.setTimestamp(6, new java.sql.Timestamp(tanggalUpdate.getTime()));
                transaksiPstm.setString(7, "Edit");
                transaksiPstm.executeUpdate();
                JOptionPane.showMessageDialog(null, "Berhasil Mengedit Data");

                // Mengosongkan field
                kodeBuku.setText("");
                namaBuku.setText("");
                pengarang.setText("");
                penerbit.setText("");
                tahunTerbit.setText("");
                jumlah.setText("");

                // Mengupdate tabel
                DefaultTableModel tabModel = new DefaultTableModel(new Object[]{"Kode_buku", "Nama_Buku", "Pengarang", "Penerbit", "Tahun_Terbit", "Jumlah"}, 0);
                java.sql.Statement stmt = conn.createStatement();
                java.sql.ResultSet rs = stmt.executeQuery("SELECT * FROM tblBuku");
                while (rs.next()) {
                    tabModel.addRow(new Object[]{rs.getString("Kode_buku"),rs.getString("Nama_Buku"), rs.getString("Pengarang"), rs.getString("Penerbit"), rs.getString("Tahun_Terbit"), rs.getInt("Jumlah")});
                }
                tabBuku.setModel(tabModel);

                // Menutup ResultSet, Statement, dan PreparedStatement
                transaksiPstm.close();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            String query = "DELETE FROM tblBuku WHERE Kode_Buku = ?";

            java.sql.Connection conn = (Connection) Conection.configDB();
            java.sql.PreparedStatement pstm = conn.prepareStatement(query);
            pstm.setString(1, kodeBuku.getText());

            int rowsAffected = pstm.executeUpdate();

            if (rowsAffected > 0) {
                // Mendapatkan informasi pengguna
                String namaUser = usernameLoggedIn;
                String role = userRole;
                java.util.Date tanggalUpdate = new java.util.Date();

                // Memasukkan data kedalam table transaksi
                String transaksiQuery = "INSERT INTO detailTransaksi (Kode_Buku, Nama_Buku, Jumlah, namaUser, role, tanggalUpdate, Keterangan) VALUES (?, ?, ?, ?, ?, ?, ?)";
                java.sql.PreparedStatement transaksiPstm = conn.prepareStatement(transaksiQuery);
                transaksiPstm.setString(1, kodeBuku.getText());
                transaksiPstm.setString(2, namaBuku.getText());
                transaksiPstm.setInt(3, Integer.parseInt(jumlah.getText()));
                transaksiPstm.setString(4, namaUser);
                transaksiPstm.setString(5, role);
                transaksiPstm.setTimestamp(6, new java.sql.Timestamp(tanggalUpdate.getTime()));
                transaksiPstm.setString(7, "Delete");
                transaksiPstm.executeUpdate();

                JOptionPane.showMessageDialog(null, "Berhasil menghapus data");
            } else {
                JOptionPane.showMessageDialog(null, "Gagal menghapus data Buku. Kode Buku tidak ditemukan.");
            }

            // Mengosongkan field
            kodeBuku.setText("");
            pengarang.setText("");
            penerbit.setText("");
            tahunTerbit.setText("");
            jumlah.setText("");

            // Mengupdate tabel
            DefaultTableModel tabModel = new DefaultTableModel(new Object[]{"Kode_buku", "Pengarang", "Penerbit", "Tahun_Terbit", "Jumlah"}, 0);
            java.sql.Statement stmt = conn.createStatement();
            java.sql.ResultSet rs = stmt.executeQuery("SELECT * FROM tblBuku");
            while (rs.next()) {
                tabModel.addRow(new Object[]{rs.getString("Kode_Buku"), rs.getString("Pengarang"), rs.getString("Penerbit"), rs.getString("Tahun_Terbit"), rs.getInt("Jumlah")});
            }
            tabBuku.setModel(tabModel);

            // Menutup Statement dan PreparedStatement
            pstm.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void kodeBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeBukuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kodeBukuActionPerformed

    private void LogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutActionPerformed
        // TODO add your handling code here:
        // Mengosongkan nilai loggedInUsername
        usernameLoggedIn = null;

        // Menutup jendela Beranda
        this.dispose();

        // Membuka jendela Login
        new adminLogin().setVisible(true);
    }//GEN-LAST:event_LogOutActionPerformed

    private void txtCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String filterText = txtCari.getText().trim();
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("Kode Buku");
            model.addColumn("Nama Buku");
            model.addColumn("Nama Pengarang");
            model.addColumn("Penerbit");
            model.addColumn("Tahun Terbit");
            model.addColumn("Jumlah");

            try {
                String sql;
                if (!filterText.isEmpty()) {
                    sql = "SELECT Kode_Buku, Nama_Buku, Pengarang, Penerbit, Tahun_Terbit, Jumlah FROM tblBuku WHERE Nama_Buku LIKE ?";
                } else {
                    sql = "SELECT Kode_Buku, Nama_Buku, Pengarang, Penerbit, Tahun_Terbit, Jumlah FROM tblBuku";
                }

                java.sql.Connection conn = (Connection) Conection.configDB();
                java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
                if (!filterText.isEmpty()) {
                    pstm.setString(1, "%" + filterText + "%");
                }
                java.sql.ResultSet res = pstm.executeQuery();

                while (res.next()) {
                    model.addRow(new Object[]{
                        res.getString(1),
                        res.getString(2),
                        res.getString(3),
                        res.getString(4),
                        res.getString(5),
                        res.getString(6) 
                    });
                }
                tabBuku.setModel(model);
            } catch (SQLException e) {
                System.out.println("Error: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_txtCariKeyPressed

    private void btnSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSearchKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            String file1 = "C:\\Users\\Gilang\\Documents\\NetBeansProjects\\Conection\\src\\conection\\reportdetailTransaksi.jasper";
            Conection Connect = new Conection();
            Connection con = Conection.configDB();
            HashMap<String, Object> parameter = new HashMap<>();
            String namaUser = usernameLoggedIn;
            String role = userRole;
            parameter.put("Kode_Buku", kodeBuku.getText());
            if (parameter.isEmpty()) {
                parameter.put("reportAll", true);
            }
            File file = new File(file1);
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(file);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameter, con);
            JasperViewer.viewReport(jasperPrint, false);
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(halamanAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(halamanAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(halamanAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(halamanAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new halamanAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LogOut;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JFormattedTextField jumlah;
    private javax.swing.JFormattedTextField kodeBuku;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private javax.swing.JFormattedTextField namaBuku;
    private javax.swing.JLabel namaUser;
    private javax.swing.JFormattedTextField penerbit;
    private javax.swing.JFormattedTextField pengarang;
    private javax.swing.JTable tabBuku;
    private javax.swing.JFormattedTextField tahunTerbit;
    private javax.swing.JFormattedTextField txtCari;
    // End of variables declaration//GEN-END:variables

}
